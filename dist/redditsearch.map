{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","addEventListener","event","value","querySelector","showMessage","results","output","forEach","post","image","preview","images","source","url","title","truncateText","selftext","subreddit","score","innerHTML","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shorthand","indexOf","substring"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;AAEA,MAAMe,aAAaC,SAASC,cAAT,CAAwB,aAAxB,CAAnB;AACA,MAAMC,cAAcF,SAASC,cAAT,CAAwB,cAAxB,CAApB;;AAEAF,WAAWI,gBAAX,CAA4B,QAA5B,EAAuCC,KAAD,IAAW;AAC/C,QAAMnB,aAAaiB,YAAYG,KAA/B;AACA,QAAMlB,SAASa,SAASM,aAAT,CAAuB,8BAAvB,EAAuDD,KAAtE;AACA,QAAMnB,cAAcc,SAASC,cAAT,CAAwB,OAAxB,EAAiCI,KAArD;AACA,MAAGpB,eAAe,EAAlB,EAAsB;AACpBsB,gBAAY,0BAAZ,EAAwC,cAAxC;AACD;AACDL,cAAYG,KAAZ,GAAoB,EAApB;AACA,sBAAOrB,MAAP,CAAcC,UAAd,EAA0BC,WAA1B,EAAuCC,MAAvC,EACGE,IADH,CACQmB,WAAW;AACf,QAAIC,SAAU,4BAAd;AACAD,YAAQE,OAAR,CAAgBC,QAAQ;AACtB,YAAMC,QAAQD,KAAKE,OAAL,GAAeF,KAAKE,OAAL,CAAaC,MAAb,CAAoB,CAApB,EAAuBC,MAAvB,CAA8BC,GAA7C,GAAoD,6GAAlE;AACAP,gBAAW;;yCAEsBG,KAAM;;mCAEZD,KAAKM,KAAM;iCACbC,aAAaP,KAAKQ,QAAlB,EAA4B,GAA5B,CAAiC;qBAC7CR,KAAKK,GAAI;;2DAE6BL,KAAKS,SAAU;uDACnBT,KAAKU,KAAM;;;OAT1D;AAaD,KAfD;AAgBAZ,cAAW,QAAX;AACAT,aAASC,cAAT,CAAwB,SAAxB,EAAmCqB,SAAnC,GAA+Cb,MAA/C;AACD,GArBH;AAsBAL,QAAMmB,cAAN;AACD,CA/BD;;AAiCA,SAAShB,WAAT,CAAqBiB,OAArB,EAA8BC,SAA9B,EAAyC;AACvC,QAAMC,MAAM1B,SAAS2B,aAAT,CAAuB,KAAvB,CAAZ;AACAD,MAAID,SAAJ,GAAiB,SAAQA,SAAU,EAAnC;AACAC,MAAIE,WAAJ,CAAgB5B,SAAS6B,cAAT,CAAwBL,OAAxB,CAAhB;AACA,QAAMM,kBAAkB9B,SAASC,cAAT,CAAwB,kBAAxB,CAAxB;AACA,QAAMjB,SAASgB,SAASC,cAAT,CAAwB,QAAxB,CAAf;AACA6B,kBAAgBC,YAAhB,CAA6BL,GAA7B,EAAkC1C,MAAlC;AACAgD,aAAW,MAAMhC,SAASM,aAAT,CAAuB,QAAvB,EAAiC2B,MAAjC,EAAjB,EAA4D,IAA5D;AACD;;AAED,SAASf,YAAT,CAAsBgB,IAAtB,EAA4BC,KAA5B,EAAmC;AACjC,QAAMC,YAAYF,KAAKG,OAAL,CAAa,GAAb,EAAkBF,KAAlB,CAAlB;AACA,MAAGC,aAAa,CAAC,CAAjB,EAAoB,OAAOF,IAAP;AACpB,SAAOA,KAAKI,SAAL,CAAe,CAAf,EAAkBF,SAAlkBDpDc;AACbpD,UAAQ,UAASC,UAAT,EAAqBC,WAArB,EAAkCC,MAAlC,EAA0C;AAChD,WAAOC,MAAO,wCAAuCH,UAAW,SAAQE,MAAO,UAASD,WAAY,EAA7F,EACJG,IADI,CACCC,OAAOA,IAAIC,IAAJ,EADR,EAEJF,IAFI,CAECG,QAAQA,KAAKA,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBF,QAAQA,KAAKA,IAApC,CAFT,EAGJG,KAHI,CAGEC,OAAOC,QAAQC,GAAR,CAAYF,GAAZ,CAHT,CAAP;AAID;AANY","file":"redditsearch.map","sourcesContent":["export default {\n  search: function(searchTerm, searchLimit, sortBy) {\n    return fetch(`https://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`)\n      .then(res => res.json())\n      .then(data => data.data.children.map(data => data.data))\n      .catch(err => console.log(err));\n  }\n}","import reddit from './redditapi';\n\nconst searchForm = document.getElementById('search-form');\nconst searchInput = document.getElementById('search-input');\n\nsearchForm.addEventListener('submit', (event) => {\n  const searchTerm = searchInput.value;\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n  const searchLimit = document.getElementById('limit').value;\n  if(searchTerm === '') {\n    showMessage('Please add a search term', 'alert-danger');\n  }\n  searchInput.value = '';\n  reddit.search(searchTerm, searchLimit, sortBy)\n    .then(results => {\n      let output = `<div class=\"card-columns\">`;\n      results.forEach(post => {\n        const image = post.preview ? post.preview.images[0].source.url : `https://lh3.googleusercontent.com/J41hsV2swVteoeB8pDhqbQR3H83NrEBFv2q_kYdq1xp9vsI1Gz9A9pzjcwX_JrZpPGsa=w300`;\n        output += `\n        <div class=\"card\">\n        <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">${post.title}</h5>\n          <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\n          <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\n          <hr>\n          <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\n          <span class=\"badge badge-secondary\">Score: ${post.score}</span>\n          </div>\n      </div>\n      `;\n      })\n      output += `</div>`;\n      document.getElementById('results').innerHTML = output;\n    });\n  event.preventDefault();\n});\n\nfunction showMessage(message, className) {\n  const div = document.createElement('div');\n  div.className = `alert ${className}`;\n  div.appendChild(document.createTextNode(message));\n  const searchContainer = document.getElementById('search-container');\n  const search = document.getElementById('search');\n  searchContainer.insertBefore(div, search);\n  setTimeout(() => document.querySelector('.alert').remove(), 3000);\n}\n\nfunction truncateText(text, limit) {\n  const shorthand = text.indexOf(' ', limit);\n  if(shorthand == -1) return text;\n  return text.substring(0, shorthand);\n}"]}